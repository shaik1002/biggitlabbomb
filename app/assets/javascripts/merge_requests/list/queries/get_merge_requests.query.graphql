#import "~/graphql_shared/fragments/page_info.fragment.graphql"
#import "./merge_request.fragment.graphql"

query getMergeRequests(
  $hideUsers: Boolean = false
  $isSignedIn: Boolean = false
  $fullPath: ID!
  $sort: MergeRequestSort
  $state: MergeRequestState
  $assigneeUsernames: String
  $assigneeWildcardId: AssigneeWildcardId
  $reviewerUsername: String
  $reviewerWildcardId: ReviewerWildcardId
  $authorUsername: String
  $draft: Boolean
  $labelName: [String!]
  $milestoneTitle: String
  $milestoneWildcardId: MilestoneWildcardId
  $sourceBranches: [String!]
  $targetBranches: [String!]
  $not: MergeRequestsResolverNegatedParams
  $beforeCursor: String
  $afterCursor: String
  $firstPageSize: Int
  $lastPageSize: Int
) {
  project(fullPath: $fullPath) {
    id
    mergeRequests(
      sort: $sort
      state: $state
      assigneeUsername: $assigneeUsernames
      assigneeWildcardId: $assigneeWildcardId
      reviewerUsername: $reviewerUsername
      reviewerWildcardId: $reviewerWildcardId
      authorUsername: $authorUsername
      draft: $draft
      labelName: $labelName
      milestoneTitle: $milestoneTitle
      milestoneWildcardId: $milestoneWildcardId
      sourceBranches: $sourceBranches
      targetBranches: $targetBranches
      not: $not
      before: $beforeCursor
      after: $afterCursor
      first: $firstPageSize
      last: $lastPageSize
    ) {
      pageInfo {
        ...PageInfo
      }
      nodes {
        ...MergeRequestFragment
      }
    }
  }
}
