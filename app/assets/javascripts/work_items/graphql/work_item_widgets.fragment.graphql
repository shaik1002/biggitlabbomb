#import "~/graphql_shared/fragments/label.fragment.graphql"
#import "~/graphql_shared/fragments/user.fragment.graphql"
#import "~/work_items/graphql/milestone.fragment.graphql"
#import "~/work_items/graphql/timelog.fragment.graphql"
#import "ee_else_ce/work_items/graphql/work_item_metadata_widgets.fragment.graphql"
#import "ee_else_ce/work_items/graphql/work_item_metadata_widgets_extras.fragment.graphql"

fragment WorkItemWidgets on WorkItemWidget {
  type
  ... on WorkItemWidgetDescription {
    description
    descriptionHtml
    lastEditedAt
    lastEditedBy {
      name
      webPath
    }
    taskCompletionStatus {
      completedCount
      count
    }
  }
  ... on WorkItemWidgetAssignees {
    allowsMultipleAssignees
    canInviteMembers
    assignees {
      nodes {
        ...User
      }
    }
  }
  ... on WorkItemWidgetLabels {
    labels {
      nodes {
        ...Label
      }
    }
  }
  ... on WorkItemWidgetParticipants {
    participants {
      nodes {
        ...User
      }
    }
  }
  ... on WorkItemWidgetStartAndDueDate {
    dueDate
    startDate
  }
  ... on WorkItemWidgetTimeTracking {
    timeEstimate
    timelogs {
      nodes {
        ...TimelogFragment
      }
    }
    totalTimeSpent
  }
  ... on WorkItemWidgetHierarchy {
    hasChildren
    hasParent
    parent {
      id
      iid
      title
      confidential
      webUrl
      workItemType {
        id
        name
        iconName
      }
    }
  }
  ... on WorkItemWidgetMilestone {
    milestone {
      ...MilestoneFragment
    }
  }
  ... on WorkItemWidgetNotes {
    discussionLocked
  }
  ... on WorkItemWidgetNotifications {
    subscribed
  }
  ... on WorkItemWidgetCurrentUserTodos {
    currentUserTodos(state: pending) {
      nodes {
        id
      }
    }
  }
  ... on WorkItemWidgetLinkedItems {
    linkedItems {
      nodes {
        linkId
        linkType
        workItem {
          id
          iid
          confidential
          workItemType {
            id
            name
            iconName
          }
          title
          state
          createdAt
          closedAt
          webUrl
          reference(full: true)
          widgets {
            ...WorkItemMetadataWidgets
            ...WorkItemMetadataWidgetsExtras
          }
        }
      }
    }
  }
  ... on WorkItemWidgetDevelopment {
    type
    willAutoCloseByMergeRequest
    closingMergeRequests {
      nodes {
        fromMrDescription
        mergeRequest {
          iid
          id
          title
          webUrl
          state
          project {
            id
            name
            namespace {
              path
            }
          }
          assignees {
            nodes {
              webUrl
              id
              name
              webPath
              avatarUrl
            }
          }
        }
      }
    }
  }
  ... on WorkItemWidgetCrmContacts {
    contacts {
      nodes {
        id
        email
        firstName
        lastName
        phone
        description
        organization {
          id
          name
        }
      }
    }
  }
}
