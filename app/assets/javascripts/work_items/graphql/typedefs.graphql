enum LocalWidgetType {
  ASSIGNEES
}

interface LocalWorkItemWidget {
  type: LocalWidgetType!
}

type LocalWorkItemAssignees implements LocalWorkItemWidget {
  type: LocalWidgetType!
  nodes: [UserCore]
}

extend type WorkItem {
  mockWidgets: [LocalWorkItemWidget]
}

input LocalUserInput {
  id: ID!
  name: String
  username: String
  webUrl: String
  avatarUrl: String
}

input LocalLabelInput {
  color: String
  description: String
  id: ID!
  textColor: String
  title: String
}

input LocalCrmContactsInput {
  firstName: String
  lastName: String
  organizationName: String
  id: ID!
}

input LocalUpdateWorkItemInput {
  id: WorkItemID!
  assignees: [LocalUserInput!]
}

input LocalRolledUpDatesInput {
  dueDateIsFixed: Boolean!
  startDateIsFixed: Boolean!
  dueDateFixed: String
  startDateFixed: String
}

scalar WorkItemsParentID

type LocalWorkItemPayload {
  workItem: WorkItem!
  errors: [String!]
}

input LocalUpdateNewWorkItemInput {
  fullPath: String!
  workItemType: String!
  healthStatus: String
  assignees: [LocalUserInput]
  color: String
  title: String
  description: String
  confidential: Boolean
  labels: [LocalLabelInput]
  rolledUpDates: [LocalRolledUpDatesInput]
  crmContacts: [LocalCrmContactsInput]
}

input LocalWorkItemBulkUpdateInput {
  clientMutationId: String
  ids: [WorkItemID!]!
  labelsWidget: WorkItemWidgetLabelsUpdateInput
  parentId: WorkItemsParentID!
}

type LocalWorkItemBulkUpdatePayload {
  clientMutationId: String
  updatedIssueCount: Int
  errors: [String!]
}

extend type Mutation {
  workItemBulkUpdate(input: LocalWorkItemBulkUpdateInput!): LocalWorkItemBulkUpdatePayload
  updateNewWorkItem(input: LocalUpdateNewWorkItemInput!): LocalWorkItemPayload
  localUpdateWorkItem(input: LocalUpdateWorkItemInput!): LocalWorkItemPayload
}
