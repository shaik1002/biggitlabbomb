- @hide_top_links = true
- @no_container = true
- breadcrumb_title user_display_name(@user)
- page_title       user_display_name(@user)
- page_description @user.bio unless @user.blocked? || !@user.confirmed?
- page_itemtype    'http://schema.org/Person'
- add_page_specific_style 'page_bundles/profile'
- add_page_specific_style 'page_bundles/projects'
- @force_desktop_expanded_sidebar = true
- nav "user_profile"

= content_for :meta_tags do
  = auto_discovery_link_tag(:atom, user_url(@user, format: :atom), title: "#{@user.name} activity")

%div{ class: container_class }
  .user-profile-header.gl-display-flex.gl-justify-content-space-between.gl-flex-direction-column.gl-md-flex-direction-row-reverse.gl-my-5{ 'data-testid': 'user-profile-header' }
    %div
      .cover-controls.gl-display-flex.gl-gap-3.gl-mb-4.gl-md-justify-content-end.gl-md-flex-direction-row-reverse
        .js-user-profile-actions{ data: user_profile_actions_data(@user) }
        = render 'users/follow_user'
        -# The following edit button is mutually exclusive to the follow user button, they won't be shown together
        - if @user == current_user
          = render Pajamas::ButtonComponent.new(href: user_settings_profile_path,
            button_options: { title: s_('UserProfile|Edit profile') }) do
            = s_("UserProfile|Edit profile")
        = render 'users/view_gpg_keys'
        = render 'users/view_user_in_admin_area'
    .gl-display-flex.gl-flex-direction-row.gl-align-items-center.gl-gap-x-5.gl-mt-2.gl-sm-mt-0
      .user-image.gl-relative.gl-md-py-3
        = link_to avatar_icon_for_user(@user, 400, current_user: current_user), target: '_blank', rel: 'noopener noreferrer', title: s_('UserProfile|View large avatar') do
          = render Pajamas::AvatarComponent.new(@user, alt: s_('UserProfile|User profile picture'), size: 96, avatar_options: { itemprop: "image" })
        - if @user.status&.busy?
          = render Pajamas::BadgeComponent.new(s_('UserProfile|Busy'), size: 'sm', variant: 'warning', class: 'gl-absolute gl-display-flex gl-justify-content-center gl-align-items-center gl-left-1/2 gl-bg-gray-50 gl-border gl-border-white -gl-translate-x-1/2 gl-top-full gl-mt-n3')
      %div
        %h1.gl-heading-1.gl-line-height-1.gl-mr-2{ class: 'gl-my-0!', itemprop: 'name' }
          = user_display_name(@user)
        .gl-font-size-h2.gl-text-gray-500.gl-font-weight-normal.gl-my-0
          = @user.to_reference
        - if !@user.blocked? && @user.confirmed? && @user.status&.customized?
          .gl-my-2.cover-status.gl-font-sm.gl-pt-2.gl-display-flex.gl-flex-direction-column
            .gl-display-inline-flex.gl-gap-3.gl-align-items-baseline
              = emoji_icon(@user.status.emoji)
              = markdown_field(@user.status, :message)
  .user-profile{ class: @user.blocked? ? '' : 'user-profile-with-sidebar' }
    .user-profile-content
      - if !profile_tabs.empty? && Feature.enabled?(:profile_tabs_vue, current_user)
        #js-profile-tabs{ data: user_profile_tabs_app_data(@user) }
      - unless Feature.enabled?(:profile_tabs_vue, current_user)
        .tab-content
          - if profile_tab?(:overview)
            #js-overview.tab-pane.user-overview-page
              = render "users/overview"

          - if profile_tab?(:activity)
            #activity.tab-pane
              .flash-container
              - if can?(current_user, :read_cross_project)
                .content_list.user-activity-content{ data: { href: user_activity_path } }
                .loading
                  = gl_loading_icon(size: 'md')
          - unless @user.bot?
            - if profile_tab?(:groups)
              #groups.tab-pane
                -# This tab is always loaded via AJAX

            - if profile_tab?(:contributed)
              #contributed.tab-pane
                -# This tab is always loaded via AJAX

            - if profile_tab?(:projects)
              #projects.tab-pane
                -# This tab is always loaded via AJAX

            - if profile_tab?(:starred)
              #starred.tab-pane
                -# This tab is always loaded via AJAX

            - if profile_tab?(:snippets)
              #snippets.tab-pane
                -# This tab is always loaded via AJAX

            - if profile_tab?(:followers)
              #followers.tab-pane
                -# This tab is always loaded via AJAX

            - if profile_tab?(:following)
              #following.tab-pane
                -# This tab is always loaded via AJAX

        .loading.hide
          .gl-spinner.gl-spinner-md

      - if profile_tabs.empty?
        - if @user.blocked?
          = render Pajamas::EmptyStateComponent.new(svg_path: 'illustrations/empty-state/empty-access-md.svg',
            title: s_('UserProfile|This user is blocked'))
        - else
          = render Pajamas::EmptyStateComponent.new(svg_path: 'illustrations/empty-state/empty-private-md.svg',
            title: s_('UserProfile|This user has a private profile'))

    - unless @user.blocked?
      = render 'users/profile_sidebar'

    -# TODO: Remove this with the removal of the old navigatifon.
    -# See https://gitlab.com/gitlab-org/gitlab/-/issues/435899.
    - if !profile_tabs.empty? && !Feature.enabled?(:profile_tabs_vue, current_user)
      .scrolling-tabs-container.gl-display-none
        %button.fade-left{ type: 'button', title: _('Scroll left'), 'aria-label': _('Scroll left') }
          = sprite_icon('chevron-lg-left', size: 12)
        %button.fade-right{ type: 'button', title: _('Scroll right'), 'aria-label': _('Scroll right') }
          = sprite_icon('chevron-lg-right', size: 12)
        %ul.nav-links.user-profile-nav.scrolling-tabs.nav.nav-tabs.gl-border-b-0
          - if profile_tab?(:overview)
            %li.js-overview-tab
              = link_to user_path, data: { target: 'div#js-overview', action: 'overview', toggle: 'tab' } do
                = s_('UserProfile|Overview')
          - if profile_tab?(:activity)
            %li.js-activity-tab
              = link_to user_activity_path, data: { target: 'div#activity', action: 'activity', toggle: 'tab' } do
                = s_('UserProfile|Activity')
          - if profile_tab?(:groups)
            %li.js-groups-tab
              = link_to user_groups_path, data: { target: 'div#groups', action: 'groups', toggle: 'tab', endpoint: user_groups_path(format: :json) } do
                = s_('UserProfile|Groups')
          - if profile_tab?(:contributed)
            %li.js-contributed-tab
              = link_to user_contributed_projects_path, data: { target: 'div#contributed', action: 'contributed', toggle: 'tab', endpoint: user_contributed_projects_path(format: :json) } do
                = s_('UserProfile|Contributed projects')
          - if profile_tab?(:projects)
            %li.js-projects-tab
              = link_to user_projects_path, data: { target: 'div#projects', action: 'projects', toggle: 'tab', endpoint: user_projects_path(format: :json) } do
                = s_('UserProfile|Personal projects')
          - if profile_tab?(:starred)
            %li.js-starred-tab
              = link_to user_starred_projects_path, data: { target: 'div#starred', action: 'starred', toggle: 'tab', endpoint: user_starred_projects_path(format: :json), card_mode: true } do
                = s_('UserProfile|Starred projects')
          - if profile_tab?(:snippets)
            %li.js-snippets-tab
              = link_to user_snippets_path, data: { target: 'div#snippets', action: 'snippets', toggle: 'tab', endpoint: user_snippets_path(format: :json) } do
                = s_('UserProfile|Snippets')
          - if profile_tab?(:followers)
            %li.js-followers-tab
              = link_to user_followers_path, data: { target: 'div#followers', action: 'followers', toggle: 'tab', endpoint: user_followers_path(format: :json) } do
                = s_('UserProfile|Followers')
                = gl_badge_tag @user.followers.count, size: :sm
          - if profile_tab?(:following)
            %li.js-following-tab
              = link_to user_following_path, data: { target: 'div#following', action: 'following', toggle: 'tab', endpoint: user_following_path(format: :json), testid: 'following_tab' } do
                = s_('UserProfile|Following')
                = gl_badge_tag @user.followees.count, size: :sm
