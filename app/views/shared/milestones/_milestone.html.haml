- dashboard = local_assigns[:dashboard]
- custom_dom_id = dom_id(milestone.try(:milestone) ? milestone.milestone : milestone)
- milestone_type = milestone.group_milestone? ? s_('Milestones|Group Milestone') : s_('Milestones|Project Milestone')
- can_admin_milestone = can?(current_user, :admin_milestone, milestone)
- can_promote = @project && can_admin_group_milestones? && milestone.project

%li{ class: "milestone milestone-#{milestone.closed? ? 'closed' : 'open'}", id: custom_dom_id }
  .row
    .col-md-7.order-1{ class: can_admin_milestone ? 'col-11' : 'col-12' }
      .gl-mb-2
        %strong{ data: { testid: "milestone-link", qa_milestone_title: milestone.title } }
          = link_to truncate(milestone.title, length: 100), milestone_path(milestone)
        - if @group || dashboard
          = " - #{milestone_type}"

      - if milestone.due_date || milestone.start_date
        .text-tertiary.gl-mb-2
          = milestone_date_range(milestone)
      - recent_releases, total_count, more_count = recent_releases_with_counts(milestone, current_user)
      - unless total_count == 0
        .text-tertiary.gl-mb-2.milestone-release-links
          = sprite_icon("rocket", size: 12)
          = n_('Release', 'Releases', total_count)
          - recent_releases.each do |release|
            = link_to release.name, project_releases_path(release.project, anchor: release.tag)
            - unless release == recent_releases.last
              &bull;
          - if total_count > recent_releases.count
            &bull;
            - more_text = n_('%{count} more release', '%{count} more releases', more_count) % { count: more_count }
            - if milestone.project_milestone?
              = link_to more_text, project_releases_path(milestone.project)
            - else
              = more_text
      %div
        = render('shared/milestone_expired', milestone: milestone)
        - if milestone.group_milestone?
          = gl_badge_tag milestone.group.full_name, { variant: :info }, { class: 'gl-whitespace-normal gl-text-left' }
        - if milestone.project_milestone?
          = gl_badge_tag milestone.project.full_name, { variant: :muted }, { class: 'gl-whitespace-normal gl-text-left' }

    .order-3.order-md-2.mt-2.mt-md-0.milestone-progress{ class: can_admin_milestone ? 'col-md-4' : 'col-md-5' }
      = milestone_progress_bar(milestone)
      = link_to pluralize(milestone.total_issues_count, _('Issue')), issues_path
      - if milestone.merge_requests_enabled?
        &middot;
        = link_to pluralize(milestone.total_merge_requests_count, _('Merge request')), merge_requests_path
      .float-lg-right.light
        = format(s_('Milestone|%{percentage}%{percent} complete'), percentage: milestone.percent_complete, percent: '%')
    - if can_admin_milestone
      - show_delete = @project.present? || @group.present?
      .col-1.order-2.order-md-3
        .gl-flex.gl-justify-content-end
          .js-vue-milestone-actions{ data: { id: milestone.id,
            title: milestone.title,
            is_active: milestone.active?.to_s,
            show_delete: show_delete.to_s,
            milestone_url: Gitlab::UrlBuilder.build(milestone, only_path: true),
            edit_url: edit_milestone_path(milestone),
            close_url: milestone_path(milestone, milestone: { state_event: :close }),
            reopen_url: milestone_path(milestone, milestone: { state_event: :activate }),
            promote_url: can_promote ? promote_project_milestone_path(milestone.project, milestone) : '',
            group_name: can_promote ? @project.group.name : '',
            issue_count: milestone.issues.count,
            merge_request_count: milestone.merge_requests.count
          } }
