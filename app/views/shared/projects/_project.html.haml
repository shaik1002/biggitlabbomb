- avatar = local_assigns[:avatar].nil? || local_assigns[:avatar]
- stars = local_assigns[:stars].nil? || local_assigns[:stars]
- forks = local_assigns[:forks].nil? || local_assigns[:forks]
- merge_requests = local_assigns[:merge_requests].nil? || local_assigns[:merge_requests]
- issues = local_assigns[:issues].nil? || local_assigns[:issues]
- pipeline_status = local_assigns[:pipeline_status].nil? || local_assigns[:pipeline_status]
- skip_namespace = local_assigns[:skip_namespace]
- compact_mode = local_assigns[:compact_mode]
- use_creator_avatar = local_assigns[:use_creator_avatar]
- show_last_commit_as_description = false unless local_assigns[:show_last_commit_as_description] == true && can_show_last_commit_in_list?(project)
- access = max_project_member_access(project)
- css_class = "gl-sm-display-flex gl-align-items-center !gl-align-middle" if project.description.blank? && !show_last_commit_as_description
- updated_tooltip = time_ago_with_tooltip(project.last_activity_at || project.updated_at)
- show_pipeline_status_icon = pipeline_status && can?(current_user, :read_cross_project) && project.pipeline_status.has_status? && can?(current_user, :read_build, project)
- last_pipeline = last_pipeline_from_status_cache(project) if show_pipeline_status_icon
- css_controls_class = "with-pipeline-status" if show_pipeline_status_icon && last_pipeline.present?
- css_metadata_classes = "gl-display-flex gl-align-items-center gl-reset-color! icon-wrapper has-tooltip"

%li.project-row
  - if avatar
    .project-cell.gl-w-11
      = link_to project_path(project), class: dom_class(project) do
        - if project.creator && use_creator_avatar
          = render Pajamas::AvatarComponent.new(project.creator, size: 48, alt: '')
        - else
          = render Pajamas::AvatarComponent.new(project, size: 48, alt: '')

  .project-cell{ class: css_class }
    .project-details.gl-pr-9.gl-sm-pr-0.gl-w-full.gl-display-flex.gl-flex-direction-column{ data: { testid: 'project-content', qa_project_name: project.name } }
      .gl-display-flex.gl-align-items-baseline.gl-flex-wrap
        %h2.gl-font-base.gl-line-height-20.gl-my-0.gl-overflow-wrap-anywhere
          = link_to project_path(project), class: 'text-plain gl-mr-3 js-prefetch-document', title: project.name do
            %span.namespace-name.gl-font-weight-normal
              - if project.namespace && !skip_namespace
                = project.namespace.human_name
                \/
            %span.project-name<
              - if @search_term.present?
                = simple_search_highlight_and_truncate(project.name, @search_term)
              - else
                = project.name

        = visibility_level_content(project, css_class: 'gl-mr-2')

        - if project.catalog_resource
          = render partial: 'shared/ci_catalog_badge', locals: { href: explore_catalog_path(project.catalog_resource), css_class: 'gl-align-self-center gl-mr-2' }

        - if explore_projects_tab? && project_license_name(project)
          %span.gl-display-inline-flex.gl-align-items-center.gl-mr-3
            = sprite_icon('scale', size: 14, css_class: 'gl-mr-2')
            = project_license_name(project)

        - if !explore_projects_tab? && access&.nonzero?
          -# haml-lint:disable UnnecessaryStringOutput
          = ' ' # prevent haml from eating the space between elements
          = render Pajamas::BadgeComponent.new(localized_project_human_access(access), variant: 'neutral', class: 'gl-bg-transparent! !gl-shadow-inner-1-gray-100', data: { testid: 'user-access-role' })

        - if !explore_projects_tab?
          = render_if_exists 'compliance_management/compliance_framework/compliance_framework_badge', project: project, additional_classes: 'gl-ml-2!'

      - if show_last_commit_as_description
        .description.gl-display-none.gl-sm-display-block.gl-overflow-hidden.gl-mr-3.gl-mt-2.gl-font-sm
          = link_to_markdown(project.commit.title, project_commit_path(project, project.commit), class: "commit-row-message")
      - elsif project.description.present?
        .description.gl-display-none.gl-sm-display-block.gl-overflow-hidden.gl-mr-3.gl-mt-2.gl-font-sm
          = markdown_field(project, :description)

      - if project.topics.any?
        .gl-mt-2
          = render "shared/projects/topics", project: project.present(current_user: current_user)

      = render_if_exists 'shared/projects/removed', project: project

      .gl-display-flex.gl-align-items-center.gl-mt-3{ class: "#{css_class} gl-sm-display-none!" }
        .controls.gl-display-flex.gl-align-items-center
          - if show_pipeline_status_icon && last_pipeline.present?
            - pipeline_path = pipelines_project_commit_path(project.pipeline_status.project, project.pipeline_status.sha, ref: project.pipeline_status.ref)
            %span.icon-wrapper.pipeline-status
              = render 'ci/status/icon', status: last_pipeline.detailed_status(current_user), tooltip_placement: 'top', path: pipeline_path

          = render_if_exists 'shared/projects/badges', project: project
          - if stars
            = link_to project_starrers_path(project), class: "#{css_metadata_classes} stars", title: _('Stars'), data: { container: 'body', placement: 'top' } do
              = sprite_icon('star-o', size: 14, css_class: 'gl-mr-2')
              = badge_count(project.star_count)
        .updated-note.gl-font-sm.gl-ml-3.gl-sm-ml-0
          %span
            = _('Updated')
            = updated_tooltip
        = render_if_exists 'shared/projects/actions', project: project

  .project-cell.project-controls{ class: "#{css_class} gl-display-none! gl-sm-display-table-cell!", data: { testid: 'project_controls'} }
    .controls.gl-display-flex.gl-align-items-center.gl-mb-2.gl-gap-4{ class: "#{css_controls_class} gl-pr-0! gl-justify-content-end!" }
      - if show_pipeline_status_icon && last_pipeline.present?
        - pipeline_path = pipelines_project_commit_path(project.pipeline_status.project, project.pipeline_status.sha, ref: project.pipeline_status.ref)
        %span.icon-wrapper.pipeline-status
          = render 'ci/status/icon', status: last_pipeline.detailed_status(current_user), tooltip_placement: 'top', path: pipeline_path

      = render_if_exists 'shared/projects/badges', project: project
      - if stars
        = link_to project_starrers_path(project), class: "#{css_metadata_classes} stars", title: _('Stars'), data: { container: 'body', placement: 'top' } do
          = sprite_icon('star-o', size: 14, css_class: 'gl-mr-2')
          = badge_count(project.star_count)
      - if show_count?(disabled: !forks, compact_mode: compact_mode)
        = link_to project_forks_path(project), class: "#{css_metadata_classes} forks", title: _('Forks'), data: { container: 'body', placement: 'top' } do
          = sprite_icon('fork', size: 14, css_class: 'gl-mr-2')
          = badge_count(project.forks_count)
      - if show_count?(disabled: !merge_requests, compact_mode: compact_mode)
        = link_to project_merge_requests_path(project), class: "#{css_metadata_classes} merge-requests", title: _('Merge requests'), data: { container: 'body', placement: 'top' } do
          = sprite_icon('git-merge', size: 14, css_class: 'gl-mr-2')
          = badge_count(project.open_merge_requests_count)
      - if show_count?(disabled: !issues, compact_mode: compact_mode)
        = link_to project_issues_path(project), class: "#{css_metadata_classes} issues", title: _('Issues'), data: { container: 'body', placement: 'top' } do
          = sprite_icon('issues', size: 14, css_class: 'gl-mr-2')
          = badge_count(project.open_issues_count)
      = render_if_exists 'shared/projects/actions', project: project
    .updated-note.gl-font-sm.gl-whitespace-nowrap.gl-justify-content-end
      %span
        = _('Updated')
        = updated_tooltip
