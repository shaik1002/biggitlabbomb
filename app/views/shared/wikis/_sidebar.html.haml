- editing ||= false

%aside.right-sidebar.right-sidebar-expanded.wiki-sidebar.js-wiki-sidebar.js-right-sidebar{ data: { "offset-top" => "50", "spy" => "affix" }, 'aria-label': _('Wiki') }
  .sidebar-container
    .block.wiki-sidebar-header.gl-mb-3.gl-w-full
      %a.gutter-toggle.gl-float-right.d-block.d-md-none.js-sidebar-wiki-toggle{ href: "#" }
        = sprite_icon('chevron-double-lg-right', css_class: 'gl-icon')

      .gl-display-flex.gl-flex-direction-column.gl-gap-3
        - git_access_url = wiki_path(@wiki, action: :git_access)
        = link_to git_access_url, class: (active_nav_link?(path: 'wikis#git_access') ? ' active' : ''), data: { testid: 'clone-repository-link' } do
          = sprite_icon('download', css_class: 'gl-mr-2')
          %span= _("Clone repository")

        - templates_url = wiki_page_path(@wiki, Wiki::TEMPLATES_DIR)
        - templates_link_class = (@page&.slug == Wiki::TEMPLATES_DIR) ? 'active' : ''
        = link_to templates_url, class: templates_link_class do
          = sprite_icon('template', css_class: 'gl-mr-2')
          %span= _("Templates")

        - if can?(current_user, :create_wiki, @wiki)
          - edit_sidebar_url = wiki_page_path(@wiki, Wiki::SIDEBAR, action: :edit)
          - sidebar_link_class = (editing && @page&.slug == Wiki::SIDEBAR) ? 'active' : ''
          = link_to edit_sidebar_url, class: sidebar_link_class do
            = sprite_icon('pencil', css_class: 'gl-mr-2')
            %span= _("Edit sidebar")

    - if @sidebar_error.present?
      = render 'shared/alert_info', body: s_('Wiki|The sidebar failed to load. You can reload the page to try again.')

    .blocks-container
      .block.block-first.gl-w-full
        - if @sidebar_page
          = render_wiki_content(@sidebar_page)
        - elsif @sidebar_wiki_entries
          %ul.wiki-pages
            - @sidebar_wiki_entries.each do |entry|
              = render partial: entry.to_partial_path, object: entry, locals: { context: 'sidebar' }
      .block.gl-w-full
        - if @sidebar_limited
          = link_button_to wiki_path(@wiki, action: :pages), data: { testid: 'view-all-pages-button' }, block: true do
            = s_("Wiki|View All Pages")
