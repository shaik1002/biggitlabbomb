- project = note.project
- note_url = Gitlab::UrlBuilder.build(note)
- noteable_identifier = note.noteable.try(:iid) || note.noteable.try(:id)

.search-result-row
  .note-search-caption.gl-max-w-full
    .gl-font-sm.gl-text-secondary.gl-float-right= time_ago_with_tooltip(note.created_at, placement: 'bottom', html_class: 'note-created-ago')
    .gl-display-inline-block.gl-text-truncate.search-max-w-inherit.gl-align-bottom
      .gl-font-bold= link_to_member(project, note.author, avatar: true, extra_class: 'gl-text-black-normal')
      .gl-text-secondary
        = _("Commented on %{link_to_project}").html_safe % { link_to_project: link_to(project.full_name, project) }
    &middot;

    - if note.for_commit?
      = link_to_if(noteable_identifier, _("Commit %{commit_id}") % { commit_id: truncate_sha(note.commit_id) }, note_url) do
        = truncate_sha(note.commit_id)
        %span.light= _("Commit deleted")

    - else
      %span #{note.noteable_type.titleize} ##{noteable_identifier}
      &middot;
      = link_to note.noteable.title, note_url, data: {track_action: 'click_text', track_label: 'noteable_title', track_property: 'search_result'}

  .note-search-result
    .term
      = simple_search_highlight_and_truncate(note.note, @search_term)
