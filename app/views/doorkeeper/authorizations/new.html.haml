.gl-ml-auto.gl-mr-auto{ class: 'sm:gl-w-1/2' }
  .gl-justify-content-left.gl-items-center
    .gl-font-size-h1
      = html_escape(_('%{client_name} is requesting access to your account on %{title}.')) % { title: brand_title.html_safe, client_name: "<strong>#{html_escape(@pre_auth.client.name)}</strong>".html_safe }
    .gl-flex.gl-items-center.gl-gap-2.gl-py-5
      = render Pajamas::AvatarComponent.new(current_user, size: 24, avatar_options: { data: { testid: 'user_avatar_content' }, title: current_user.username })
      .gl-pl-1
        %strong= current_user.name
      &middot;
      .gl-text-gray-500
        %span= current_user.to_reference
  - if current_user.admin?
    = render Pajamas::AlertComponent.new(variant: :warning, dismissible: false, alert_options: { class: 'gl-mb-5'}) do |c|
      - c.with_body do
        = html_escape(_('You are an administrator, which means authorizing access to %{client_name} will allow it to interact with GitLab as an administrator as well.')) % { client_name: "<strong>#{html_escape(@pre_auth.client.name)}</strong>".html_safe }
  - if @pre_auth.scopes
    - @pre_auth.scopes.each do |scope|
      %strong= t scope, scope: [:doorkeeper, :scopes]
      .gl-text-gray-500.gl-pb-5.gl-text-sm= t scope, scope: [:doorkeeper, :scope_desc]
  .info-well
    .well-segment
      %p.gl-text-orange-500
        = sprite_icon('warning-solid')
        = html_escape(_('Make sure you trust %{client_name} before authorizing.')) % { client_name: "<strong>#{html_escape(@pre_auth.client.name)}</strong>".html_safe }
      %p
        = html_escape(_('%{owner} %{created_date} ago.')) % { owner: auth_app_owner_text(@pre_auth.client.application.owner), created_date: time_ago_in_words(@pre_auth.client.application.created_at.to_date) }
        - domain = URI.parse(@pre_auth.redirect_uri).host.gsub(/^www\./, '')
        - if @pre_auth.redirect_uri.start_with?('http://', 'https://') && domain != 'localhost'
          = html_escape(_('You will be redirected to %{domain} after authorizing.')) % { domain: "<strong>#{domain}</strong>".html_safe }
  %div
    = form_tag oauth_authorization_path, method: :post, class: 'inline gl-pr-3' do
      = hidden_field_tag :client_id, @pre_auth.client.uid
      = hidden_field_tag :redirect_uri, @pre_auth.redirect_uri
      = hidden_field_tag :state, @pre_auth.state
      = hidden_field_tag :response_type, @pre_auth.response_type
      = hidden_field_tag :scope, @pre_auth.scope
      = hidden_field_tag :nonce, @pre_auth.nonce
      = hidden_field_tag :code_challenge, @pre_auth.code_challenge
      = hidden_field_tag :code_challenge_method, @pre_auth.code_challenge_method
      = render Pajamas::ButtonComponent.new(type: :submit,
        variant: :confirm,
        button_options: {testid: 'authorization-button'}) do
        = html_escape(_('Authorize %{client_name}')) % { client_name: @pre_auth.client.name.html_safe }
    = form_tag oauth_authorization_path, method: :delete, class: 'inline' do
      = hidden_field_tag :client_id, @pre_auth.client.uid
      = hidden_field_tag :redirect_uri, @pre_auth.redirect_uri
      = hidden_field_tag :state, @pre_auth.state
      = hidden_field_tag :response_type, @pre_auth.response_type
      = hidden_field_tag :scope, @pre_auth.scope
      = hidden_field_tag :nonce, @pre_auth.nonce
      = hidden_field_tag :code_challenge, @pre_auth.code_challenge
      = hidden_field_tag :code_challenge_method, @pre_auth.code_challenge_method
      = render Pajamas::ButtonComponent.new(type: :submit) do
        = _('Cancel')
