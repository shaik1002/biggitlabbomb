<% custom_abilities_by_feature_category = MemberRole.all_customizable_permissions.group_by { |_k, definition| definition[:feature_category] } %>
<% def humanize(feature_category) %>
<%   case feature_category %>
<%   when 'mlops' %>
<%     "MLOps" %>
<%   when 'not_owned' %>
<%     "Not categorized" %>
<%   else %>
<%     "#{feature_category.humanize}" %>
<%   end %>
<% end %>
<% def enabled_link(ability) %>
<%   return unless ability[:feature_flag_enabled_milestone] || ability[:feature_flag_enabled_mr] %>
<%   return "GitLab #{ability[:feature_flag_enabled_milestone]}" unless ability[:feature_flag_enabled_mr] %>
<%   "GitLab [#{ability[:feature_flag_enabled_milestone]}](#{ability[:feature_flag_enabled_mr]})" %>
<% end %>
<% def feature_flag(ability) %>
<%   return unless ability[:feature_flag] %>
<%   "`#{ability[:feature_flag]}`" %>
<% end %>
---
stage: Govern
group: Authorization
info: "To determine the technical writer assigned to the Stage/Group associated with this page, see https://handbook.gitlab.com/handbook/product/ux/technical-writing/#assignments"
---

<!--
  This documentation is auto generated by a Rake task.

  Please do not edit this file directly. To update this file, run:
  bundle exec rake gitlab:custom_roles:compile_docs

  To make changes to the output of the Rake task,
  edit `tooling/custom_roles/docs/templates/custom_abilities.md.erb`.
-->

# Available custom permissions

The following permissions are available. You can add these permissions in any combination
to a base role to create a custom role.

Some permissions require having other permissions enabled first. For example, administration of vulnerabilities (`admin_vulnerability`) can only be enabled if reading vulnerabilities (`read_vulnerability`) is also enabled.

These requirements are documented in the `Required permission` column in the following table.
<% custom_abilities_by_feature_category.sort.each do |category, abilities| %>

## <%= "#{humanize(category)}" %>

| Name | Required permission | Description | Introduced in | Feature flag | Enabled in |
|:-----|:------------|:------------------|:---------|:--------------|:---------|
<% abilities.each do |name, ability| %>
| <%= "[`#{name}`](#{ability[:introduced_by_mr]})" %> | <%= ability[:requirement] %> | <%= ability[:description] %> | GitLab <%= "[#{ability[:milestone]}](#{ability[:introduced_by_issue]})" %> | <%= feature_flag(ability) %> | <%= enabled_link(ability) %> |
<% end %>
<% end %>
